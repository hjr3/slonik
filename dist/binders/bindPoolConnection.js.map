{"version":3,"sources":["../../src/binders/bindPoolConnection.js"],"names":["parentLog","connection","clientConfiguration","any","bind","anyFirst","copyFromBinary","copyQuery","values","columnTypes","sql","many","manyFirst","maybeOne","maybeOneFirst","one","oneFirst","query","stream","streamQuery","streamHandler","transaction","handler"],"mappings":";;;;;;;AAEA;;AAUA;;AAcA;;4BAKEA,S,EACAC,U,EACAC,mB,KAC+B;AAC/B,SAAO;AACLC,IAAAA,GAAG,EAAE,mDAAmCA,uBAAIC,IAAJ,CAAS,IAAT,EAAeJ,SAAf,EAA0BC,UAA1B,EAAsCC,mBAAtC,CAAnC,CADA;AAELG,IAAAA,QAAQ,EAAE,mDAAmCA,4BAASD,IAAT,CAAc,IAAd,EAAoBJ,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAnC,CAFL;AAGLI,IAAAA,cAAc,EAAE,OAAOC,SAAP,EAAkBC,MAAlB,EAA0BC,WAA1B,KAA0C;AACxD,yCAAkBF,SAAlB;AAEA,aAAO,uCACLP,SADK,EAELC,UAFK,EAGLC,mBAHK,EAILK,SAAS,CAACG,GAJL,EAKLH,SAAS,CAACC,MALL,EAMLA,MANK,EAOLC,WAPK,CAAP;AASD,KAfI;AAgBLE,IAAAA,IAAI,EAAE,mDAAmCA,wBAAKP,IAAL,CAAU,IAAV,EAAgBJ,SAAhB,EAA2BC,UAA3B,EAAuCC,mBAAvC,CAAnC,CAhBD;AAiBLU,IAAAA,SAAS,EAAE,mDAAmCA,6BAAUR,IAAV,CAAe,IAAf,EAAqBJ,SAArB,EAAgCC,UAAhC,EAA4CC,mBAA5C,CAAnC,CAjBN;AAkBLW,IAAAA,QAAQ,EAAE,mDAAmCA,4BAAST,IAAT,CAAc,IAAd,EAAoBJ,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAnC,CAlBL;AAmBLY,IAAAA,aAAa,EAAE,mDAAmCA,iCAAcV,IAAd,CAAmB,IAAnB,EAAyBJ,SAAzB,EAAoCC,UAApC,EAAgDC,mBAAhD,CAAnC,CAnBV;AAoBLa,IAAAA,GAAG,EAAE,mDAAmCA,uBAAIX,IAAJ,CAAS,IAAT,EAAeJ,SAAf,EAA0BC,UAA1B,EAAsCC,mBAAtC,CAAnC,CApBA;AAqBLc,IAAAA,QAAQ,EAAE,mDAAmCA,4BAASZ,IAAT,CAAc,IAAd,EAAoBJ,SAApB,EAA+BC,UAA/B,EAA2CC,mBAA3C,CAAnC,CArBL;AAsBLe,IAAAA,KAAK,EAAE,mDAAmCA,yBAAMb,IAAN,CAAW,IAAX,EAAiBJ,SAAjB,EAA4BC,UAA5B,EAAwCC,mBAAxC,CAAnC,CAtBF;AAuBLgB,IAAAA,MAAM,EAAE,OAAOC,WAAP,EAAoBC,aAApB,KAAsC;AAC5C,yCAAkBD,WAAlB;AAEA,aAAO,+BACLnB,SADK,EAELC,UAFK,EAGLC,mBAHK,EAILiB,WAAW,CAACT,GAJP,EAKLS,WAAW,CAACX,MALP,EAMLY,aANK,CAAP;AAQD,KAlCI;AAmCLC,IAAAA,WAAW,EAAE,MAAOC,OAAP,IAA4C;AACvD,aAAO,oCACLtB,SADK,EAELC,UAFK,EAGLC,mBAHK,EAILoB,OAJK,CAAP;AAMD;AA1CI,GAAP;AA4CD,C","sourcesContent":["// @flow\n\nimport {\n  mapTaggedTemplateLiteralInvocation,\n} from '../utilities';\nimport type {\n  ClientConfigurationType,\n  DatabasePoolConnectionType,\n  InternalDatabaseConnectionType,\n  LoggerType,\n  TransactionFunctionType,\n} from '../types';\nimport {\n  any,\n  anyFirst,\n  copyFromBinary,\n  many,\n  manyFirst,\n  maybeOne,\n  maybeOneFirst,\n  one,\n  oneFirst,\n  query,\n  stream,\n  transaction,\n} from '../connectionMethods';\nimport {\n  assertSqlSqlToken,\n} from '../assertions';\n\nexport default (\n  parentLog: LoggerType,\n  connection: InternalDatabaseConnectionType,\n  clientConfiguration: ClientConfigurationType,\n): DatabasePoolConnectionType => {\n  return {\n    any: mapTaggedTemplateLiteralInvocation(any.bind(null, parentLog, connection, clientConfiguration)),\n    anyFirst: mapTaggedTemplateLiteralInvocation(anyFirst.bind(null, parentLog, connection, clientConfiguration)),\n    copyFromBinary: async (copyQuery, values, columnTypes) => {\n      assertSqlSqlToken(copyQuery);\n\n      return copyFromBinary(\n        parentLog,\n        connection,\n        clientConfiguration,\n        copyQuery.sql,\n        copyQuery.values,\n        values,\n        columnTypes,\n      );\n    },\n    many: mapTaggedTemplateLiteralInvocation(many.bind(null, parentLog, connection, clientConfiguration)),\n    manyFirst: mapTaggedTemplateLiteralInvocation(manyFirst.bind(null, parentLog, connection, clientConfiguration)),\n    maybeOne: mapTaggedTemplateLiteralInvocation(maybeOne.bind(null, parentLog, connection, clientConfiguration)),\n    maybeOneFirst: mapTaggedTemplateLiteralInvocation(maybeOneFirst.bind(null, parentLog, connection, clientConfiguration)),\n    one: mapTaggedTemplateLiteralInvocation(one.bind(null, parentLog, connection, clientConfiguration)),\n    oneFirst: mapTaggedTemplateLiteralInvocation(oneFirst.bind(null, parentLog, connection, clientConfiguration)),\n    query: mapTaggedTemplateLiteralInvocation(query.bind(null, parentLog, connection, clientConfiguration)),\n    stream: async (streamQuery, streamHandler) => {\n      assertSqlSqlToken(streamQuery);\n\n      return stream(\n        parentLog,\n        connection,\n        clientConfiguration,\n        streamQuery.sql,\n        streamQuery.values,\n        streamHandler,\n      );\n    },\n    transaction: async (handler: TransactionFunctionType) => {\n      return transaction(\n        parentLog,\n        connection,\n        clientConfiguration,\n        handler,\n      );\n    },\n  };\n};\n"],"file":"bindPoolConnection.js"}