{"version":3,"sources":["../src/index.js"],"names":["sql"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;AAmCA;;AAGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAnCO,MAAMA,GAAG,GAAG,8BAAZ","sourcesContent":["// @flow\n\nimport {\n  createSqlTag,\n} from './factories';\n\nexport const sql = createSqlTag();\n\nexport type {\n  ArraySqlTokenType,\n  BinarySqlTokenType,\n  ConnectionTypeType,\n  DatabaseConnectionType,\n  DatabasePoolConnectionType,\n  DatabasePoolType,\n  DatabaseTransactionConnectionType,\n  FieldType,\n  IdentifierSqlTokenType,\n  InterceptorType,\n  JsonSqlTokenType,\n  ListSqlTokenType,\n  QueryContextType,\n  QueryResultRowType,\n  QueryResultType,\n  QueryType,\n  SqlSqlTokenType,\n  UnnestSqlTokenType,\n  ValueExpressionType,\n} from './types';\nexport {\n  createMockPool,\n  createMockQueryResult,\n  createPool,\n  createSqlTag,\n  createSqlTokenSqlFragment,\n  createTypeParserPreset,\n} from './factories';\nexport {\n  isSqlToken,\n} from './utilities';\nexport * from './factories/typeParsers';\nexport {\n  BackendTerminatedError,\n  CheckIntegrityConstraintViolationError,\n  ConnectionError,\n  DataIntegrityError,\n  ForeignKeyIntegrityConstraintViolationError,\n  IntegrityConstraintViolationError,\n  InvalidConfigurationError,\n  InvalidInputError,\n  NotFoundError,\n  NotNullIntegrityConstraintViolationError,\n  SlonikError,\n  StatementCancelledError,\n  StatementTimeoutError,\n  UnexpectedStateError,\n  UniqueIntegrityConstraintViolationError,\n} from './errors';\n"],"file":"index.js"}