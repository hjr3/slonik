{"version":3,"sources":["../../src/factories/createClientConfiguration.js"],"names":["clientUserConfigurationInput","typeParsers","configuration","captureStackTrace","connectionRetryLimit","connectionTimeout","idleInTransactionSessionTimeout","idleTimeout","interceptors","maximumPoolSize","preferNativeBindings","statementTimeout","transactionRetryLimit","InvalidConfigurationError"],"mappings":";;;;;;;AAOA;;AAGA;;;;kCAEgBA,4B,IAAyF;AACvG,QAAMC,WAA2C,GAAG,EAApD;AAEA,QAAMC,aAAa,GAAG;AACpBC,IAAAA,iBAAiB,EAAE,IADC;AAEpBC,IAAAA,oBAAoB,EAAE,CAFF;AAGpBC,IAAAA,iBAAiB,EAAE,IAHC;AAIpBC,IAAAA,+BAA+B,EAAE,KAJb;AAKpBC,IAAAA,WAAW,EAAE,IALO;AAOpB;AACAC,IAAAA,YAAY,EAAE,EARM;AAUpBC,IAAAA,eAAe,EAAE,EAVG;AAYpBC,IAAAA,oBAAoB,EAAE,IAZF;AAapBC,IAAAA,gBAAgB,EAAE,KAbE;AAcpBC,IAAAA,qBAAqB,EAAE,CAdH;AAepBX,IAAAA,WAfoB;AAiBpB;AACA,OAAGD;AAlBiB,GAAtB;;AAqBA,MAAIE,aAAa,CAACO,eAAd,GAAgC,CAApC,EAAuC;AACrC,UAAM,IAAII,iCAAJ,CAA8B,qDAA9B,CAAN;AACD;;AAED,MAAI,CAACX,aAAa,CAACD,WAAf,IAA8BC,aAAa,CAACD,WAAd,KAA8BA,WAAhE,EAA6E;AAC3E;AACAC,IAAAA,aAAa,CAACD,WAAd,GAA4B,sCAA5B;AACD;;AAED,SAAOC,aAAP;AACD,C","sourcesContent":["// @flow\n\nimport type {\n  ClientConfigurationInputType,\n  ClientConfigurationType,\n  TypeParserType,\n} from '../types';\nimport {\n  InvalidConfigurationError,\n} from '../errors';\nimport createTypeParserPreset from './createTypeParserPreset';\n\nexport default (clientUserConfigurationInput?: ClientConfigurationInputType): ClientConfigurationType => {\n  const typeParsers: $ReadOnlyArray<TypeParserType> = [];\n\n  const configuration = {\n    captureStackTrace: true,\n    connectionRetryLimit: 3,\n    connectionTimeout: 5000,\n    idleInTransactionSessionTimeout: 60000,\n    idleTimeout: 5000,\n\n    // $FlowFixMe\n    interceptors: [],\n\n    maximumPoolSize: 10,\n\n    preferNativeBindings: true,\n    statementTimeout: 60000,\n    transactionRetryLimit: 5,\n    typeParsers,\n\n    // $FlowFixMe\n    ...clientUserConfigurationInput,\n  };\n\n  if (configuration.maximumPoolSize < 1) {\n    throw new InvalidConfigurationError('maximumPoolSize must be equal to or greater than 1.');\n  }\n\n  if (!configuration.typeParsers || configuration.typeParsers === typeParsers) {\n    // $FlowFixMe\n    configuration.typeParsers = createTypeParserPreset();\n  }\n\n  return configuration;\n};\n"],"file":"createClientConfiguration.js"}