{"version":3,"sources":["../../src/factories/createPoolConfiguration.js"],"names":["connectionUri","clientConfiguration","poolConfiguration","connectionTimeoutMillis","connectionTimeout","idleTimeoutMillis","idleTimeout","max","maximumPoolSize","undefined","log","warn","ssl","rejectUnauthorized"],"mappings":";;;;;;;AAIA;;AAMA;;;;AARA;iCAUgBA,a,EAAuBC,mB,KAAiD;AACtF,QAAMC,iBAAiB,GAAG,+BAAsBF,aAAtB,CAA1B,CADsF,CAGtF;;AACAE,EAAAA,iBAAiB,CAACC,uBAAlB,GAA4CF,mBAAmB,CAACG,iBAAhE;AACAF,EAAAA,iBAAiB,CAACG,iBAAlB,GAAsCJ,mBAAmB,CAACK,WAA1D;AACAJ,EAAAA,iBAAiB,CAACK,GAAlB,GAAwBN,mBAAmB,CAACO,eAA5C;;AAEA,MAAIP,mBAAmB,CAACG,iBAApB,KAA0C,iBAA9C,EAAiE;AAC/DF,IAAAA,iBAAiB,CAACC,uBAAlB,GAA4CM,SAA5C;AACD,GAFD,MAEO,IAAIR,mBAAmB,CAACG,iBAApB,KAA0C,CAA9C,EAAiD;AACtDM,oBAAIC,IAAJ,CAAS,8GAAT;;AAEAT,IAAAA,iBAAiB,CAACC,uBAAlB,GAA4C,CAA5C;AACD;;AAED,MAAID,iBAAiB,CAACU,GAAtB,EAA2B;AACzBV,IAAAA,iBAAiB,CAACU,GAAlB,GAAwB;AACtBC,MAAAA,kBAAkB,EAAE,KADE;AAEtB,SAAGX,iBAAiB,CAACU;AAFC,KAAxB;AAID,GArBqF,CAuBtF;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA,SAAOV,iBAAP;AACD,C","sourcesContent":["// @flow\n\n/* eslint-disable id-match */\n\nimport {\n  parse as parseConnectionString,\n} from 'pg-connection-string';\nimport type {\n  ClientConfigurationType,\n} from '../types';\nimport log from '../Logger';\n\nexport default (connectionUri: string, clientConfiguration: ClientConfigurationType) => {\n  const poolConfiguration = parseConnectionString(connectionUri);\n\n  // @see https://node-postgres.com/api/pool\n  poolConfiguration.connectionTimeoutMillis = clientConfiguration.connectionTimeout;\n  poolConfiguration.idleTimeoutMillis = clientConfiguration.idleTimeout;\n  poolConfiguration.max = clientConfiguration.maximumPoolSize;\n\n  if (clientConfiguration.connectionTimeout === 'DISABLE_TIMEOUT') {\n    poolConfiguration.connectionTimeoutMillis = undefined;\n  } else if (clientConfiguration.connectionTimeout === 0) {\n    log.warn('connectionTimeout=0 sets timeout to 0 milliseconds; use connectionTimeout=DISABLE_TIMEOUT to disable timeout');\n\n    poolConfiguration.connectionTimeoutMillis = 1;\n  }\n\n  if (poolConfiguration.ssl) {\n    poolConfiguration.ssl = {\n      rejectUnauthorized: false,\n      ...poolConfiguration.ssl,\n    };\n  }\n\n  // Temporary disabled.\n  // There appears to be a bug in node-postgres.\n  // https://github.com/brianc/node-postgres/issues/2103\n\n  // poolConfiguration.idle_in_transaction_session_timeout = clientConfiguration.idleInTransactionSessionTimeout;\n  // poolConfiguration.statement_timeout = clientConfiguration.statementTimeout;\n\n  // if (clientConfiguration.idleInTransactionSessionTimeout === 'DISABLE_TIMEOUT') {\n  //   poolConfiguration.idle_in_transaction_session_timeout = undefined;\n  // } else if (clientConfiguration.idleInTransactionSessionTimeout === 0) {\n  //   log.warn('idleInTransactionSessionTimeout=0 sets timeout to 0 milliseconds; use idleInTransactionSessionTimeout=DISABLE_TIMEOUT to disable timeout');\n\n  //   poolConfiguration.idle_in_transaction_session_timeout = 1;\n  // }\n\n  // if (clientConfiguration.statementTimeout === 'DISABLE_TIMEOUT') {\n  //   poolConfiguration.statement_timeout = undefined;\n  // } else if (clientConfiguration.statementTimeout === 0) {\n  //   log.warn('statementTimeout=0 sets timeout to 0 milliseconds; use statementTimeout=DISABLE_TIMEOUT to disable timeout');\n\n  //   poolConfiguration.statement_timeout = 1;\n  // }\n\n  return poolConfiguration;\n};\n"],"file":"createPoolConfiguration.js"}