{"version":3,"sources":["../../src/utilities/normaliseQueryValues.js"],"names":["queryValues","native","finalValues","value","Buffer","isBuffer","push","toString"],"mappings":";;;;;;;8BAMgBA,W,EAA2DC,M,KAAkE;AAC3I,MAAIA,MAAM,IAAID,WAAd,EAA2B;AACzB,UAAME,WAAW,GAAG,EAApB;;AAEA,SAAK,MAAMC,KAAX,IAAoBH,WAApB,EAAiC;AAC/B;AACA;AACA;AACA,UAAII,MAAM,CAACC,QAAP,CAAgBF,KAAhB,CAAJ,EAA4B;AAC1B;AACAD,QAAAA,WAAW,CAACI,IAAZ,CAAiB,QAAQH,KAAK,CAACI,QAAN,CAAe,KAAf,CAAzB;AACD,OAHD,MAGO;AACLL,QAAAA,WAAW,CAACI,IAAZ,CAAiBH,KAAjB;AACD;AACF;;AAED,WAAOD,WAAP;AACD;;AAED,SAAOF,WAAP;AACD,C","sourcesContent":["// @flow\n\nimport type {\n  PrimitiveValueExpressionType,\n} from '../types';\n\nexport default (queryValues: $ReadOnlyArray<PrimitiveValueExpressionType>, native: boolean): $ReadOnlyArray<PrimitiveValueExpressionType> => {\n  if (native && queryValues) {\n    const finalValues = [];\n\n    for (const value of queryValues) {\n      // Property handle binary/ bytea inserts.\n      // @see https://github.com/brianc/node-postgres/issues/980\n      // @see https://github.com/brianc/node-pg-native/issues/83\n      if (Buffer.isBuffer(value)) {\n        // $FlowFixMe\n        finalValues.push('\\\\x' + value.toString('hex'));\n      } else {\n        finalValues.push(value);\n      }\n    }\n\n    return finalValues;\n  }\n\n  return queryValues;\n};\n"],"file":"normaliseQueryValues.js"}