{"version":3,"sources":["../../src/factories/createMockPool.js"],"names":["overrides","clientConfigurationInput","clientConfiguration","poolId","poolLog","Logger","child","pool","connect","connection","slonik","connectionId","mock","terminated","transactionDepth","off","on","query","release","ended","typeOverrides"],"mappings":";;;;;;;AAEA;;AAUA;;AACA;;AACA;;;;wBAOEA,S,EACAC,wB,KACqB;AACrB,QAAMC,mBAAmB,GAAG,wCAA0BD,wBAA1B,CAA5B;AAEA,QAAME,MAAM,GAAG,4BAAf;;AAEA,QAAMC,OAAO,GAAGC,gBAAOC,KAAP,CAAa;AAC3BH,IAAAA;AAD2B,GAAb,CAAhB;;AAIA,QAAMI,IAAI,GAAG;AACXC,IAAAA,OAAO,EAAE,MAAM;AACb,YAAMC,UAAU,GAAG;AACjBA,QAAAA,UAAU,EAAE;AACVC,UAAAA,MAAM,EAAE;AACNC,YAAAA,YAAY,EAAE,4BADR;AAENC,YAAAA,IAAI,EAAE,IAFA;AAGNC,YAAAA,UAAU,EAAE,IAHN;AAINC,YAAAA,gBAAgB,EAAE;AAJZ;AADE,SADK;AASjBC,QAAAA,GAAG,EAAE,MAAM,CAAE,CATI;AAUjBC,QAAAA,EAAE,EAAE,MAAM,CAAE,CAVK;AAWjBC,QAAAA,KAAK,EAAEjB,SAAS,CAACiB,KAXA;AAYjBC,QAAAA,OAAO,EAAE,MAAM,CAAE;AAZA,OAAnB;AAeA,aAAOT,UAAP;AACD,KAlBU;AAmBXC,IAAAA,MAAM,EAAE;AACNS,MAAAA,KAAK,EAAE,KADD;AAENP,MAAAA,IAAI,EAAE,IAFA;AAGNT,MAAAA,MAHM;AAINiB,MAAAA,aAAa,EAAE;AAJT;AAnBG,GAAb;AA2BA,SAAO,uBACLhB,OADK,EAELG,IAFK,EAGLL,mBAHK,CAAP;AAKD,C","sourcesContent":["// @flow\n\nimport {\n  createUlid,\n} from '../utilities';\nimport type {\n  ClientConfigurationInputType,\n  DatabasePoolType,\n  PrimitiveValueExpressionType,\n  QueryResultRowType,\n  QueryResultType,\n} from '../types';\nimport Logger from '../Logger';\nimport bindPool from '../binders/bindPool';\nimport createClientConfiguration from './createClientConfiguration';\n\ntype OverridesType = {|\n  +query: (sql: string, values: $ReadOnlyArray<PrimitiveValueExpressionType>,) => Promise<QueryResultType<QueryResultRowType>>,\n|};\n\nexport default (\n  overrides: OverridesType,\n  clientConfigurationInput?: ClientConfigurationInputType,\n): DatabasePoolType => {\n  const clientConfiguration = createClientConfiguration(clientConfigurationInput);\n\n  const poolId = createUlid();\n\n  const poolLog = Logger.child({\n    poolId,\n  });\n\n  const pool = {\n    connect: () => {\n      const connection = {\n        connection: {\n          slonik: {\n            connectionId: createUlid(),\n            mock: true,\n            terminated: null,\n            transactionDepth: null,\n          },\n        },\n        off: () => {},\n        on: () => {},\n        query: overrides.query,\n        release: () => {},\n      };\n\n      return connection;\n    },\n    slonik: {\n      ended: false,\n      mock: true,\n      poolId,\n      typeOverrides: null,\n    },\n  };\n\n  return bindPool(\n    poolLog,\n    pool,\n    clientConfiguration,\n  );\n};\n"],"file":"createMockPool.js"}