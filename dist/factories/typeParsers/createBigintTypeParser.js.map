{"version":3,"sources":["../../../src/factories/typeParsers/createBigintTypeParser.js"],"names":["bigintParser","value","Number","parseInt","name","parse"],"mappings":";;;;;;;AAMA,MAAMA,YAAY,GAAIC,KAAD,IAAW;AAC9B;AACA,SAAOC,MAAM,CAACC,QAAP,CAAgBF,KAAhB,EAAuB,EAAvB,CAAP;AACD,CAHD;;qCAKqC;AACnC,SAAO;AACLG,IAAAA,IAAI,EAAE,MADD;AAELC,IAAAA,KAAK,EAAEL;AAFF,GAAP;AAID,C","sourcesContent":["// @flow\n\nimport type {\n  TypeParserType,\n} from '../../types';\n\nconst bigintParser = (value) => {\n  // @todo Use bigint when value is greater than Number.MAX_SAFE_INTEGER.\n  return Number.parseInt(value, 10);\n};\n\nexport default (): TypeParserType => {\n  return {\n    name: 'int8',\n    parse: bigintParser,\n  };\n};\n"],"file":"createBigintTypeParser.js"}